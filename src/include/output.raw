<?
  /*
   * Output-Functions for Koch-Suite
   * $Id: output.raw,v 1.4 2000/11/24 23:23:28 michael Exp $
   */

  require "<%%PHP_LIBS%%>/functions.inc";

  function mmexport ($rezept) {
    /* return a Meal-Master-formatted string. */
    $str = "";
    $i = 0;
    $header = "MMMMM-----mmexport (v0.2) Export nach Meal-Master-----\n";
    $footer = "MMMMM";

    $str .= "$header\n";
    $str .= "     Title: " . $rezept["title"] . "\n"; 

    $cat_a = $rezept["category"];
    $str .= "Categories: "; 
    while (isset($cat_a[$i])) {
      if ($i != 0) {
        $str  .= ", ";
      }
      $str .= $cat_a[$i];
      $i++;
    }
    $str .= "\n";

    $str .= "     Yield: " . $rezept["yield"] . " Portionen\n"; 

    $str .= print_ingred($rezept["zutaten"]);
    $a = length_adjust($rezept["anleitung"], 78); 
    foreach ($a as $line) {
      $str .= $line . "\n";
    }
    $str .= "\n$footer\n";

    return $str;
  }


  function mmrezept_header ($str) {
    /* return a valid Mealmaster-subheader */
    $len = strlen($str);
    $fill = "--------------------";
    $fill_l = "MMMMM" . $fill;
    $fill_r = "-----" . $fill;
    $str = $fill_l . $str . $fill_r;
    return "$str";
  }


  function length_adjust ($str, $len) {
    /* Adjust the String-Length. return an array */
    $bar = array();
    $foo = "";

    if (strlen($str) > $len) {
      $str = preg_replace("/\n:/", " <br> :", $str);
      $str = preg_replace("/\n\n/", " <p> ", $str);
      $str = preg_replace("/\n/", " ", $str);
      /* Ingredient-line to long */
      $a = explode(" ", $str);
      $i = 0;
      while (isset($a[$i])) {
        if ((strlen($foo) + strlen($a[$i])) < $len) {
          if (preg_match("/\n/", $a[$i])) {
            $foo .= preg_replace("/\n/", " ", $a[$i++]) . " ";
          } else if (preg_match("/<(br|p)>/", $a[$i], $bla)) {
            $i++;
            array_push($bar, $foo);
            if ($bla[1] == 'p') {
              array_push($bar, "");
            }
            $foo = "";
          } else {
            $foo .= $a[$i++] . " ";
          }
        } else {
          array_push($bar, $foo);
          $foo = "";
        }
      }
      if ($foo != "") {
        array_push($bar, $foo);
      }
    } else {
      /* ingredient-line ok */
      array_push($bar, $str);
    }
    return $bar;
  }


  function print_ingred ($r) {
    $i = 0;
    foreach ($r as $z) {
      /* Print a mealmaster-Subheader for subrecipes: */
      if ($z["title"] != "Zutaten:") {
        $str .= mmrezept_header($z["title"]) . "\n";
      } else {
        $str .= "\n";
      }
      /* Print each ingredient on one line: */
      foreach ($z["ingredients"] as $j) {
        $u = 0;

        if (($quant = round($j["quant"], 3)) == 0) {
          $quant = "";              // suppress "0" values.
        }
        $a = length_adjust($j["ingred"], 28);
        $rline = pad_left($quant," ", 7) . " " .
                 pad_right($j["unit"]  , " ", 2) . " " .
                 $a[$u++] . "\n";
        $str .= $rline;
        while (isset($a[$u])) {
          $str .= "           -- " . $a[$u++] . "\n";
        }
      }
      $str .= "\n";
    }
    return $str;
  }

?>
