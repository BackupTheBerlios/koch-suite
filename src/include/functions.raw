<?
  /* Functions for the "Koch-Suite" by
   * Michael Lestinsky <michael@zaphod.rhein-neckar.de>, October 2000
   * $Id: functions.raw,v 1.5 2000/11/13 19:35:58 michael Exp $
   */

  include "<%%PHP_LIBS%%>/config.inc";

  /* --- Functions --- */


  function parse_mmrecipe($fd) {
    /* scan a recipe until it's end
     * $fd: read from this filedescriptor
     * return a rather complex 4-dimensional array, 
     * read the source to understand it's format
     */
    $bar            = 0;
    $zutaten        = array();
    $instruction    = "";
    $zutaten_header = "/^(-{5}|M{5})-*([a-z0-9äöüß!\?:\. \*]*)[-=@]*$/i";
    $rezept_ende    = "/^(-{5}|M{5})[@-]*$/";

    while ($line = fgets($fd, 1024)) {
      if (preg_match($rezept_ende, $line)) {
        /* Found the end of the recipe */
        break;
      } else {

        if ($seen_title != 1 and ereg("Title: (.*)", $line, $foo)) {
          $title = trim($foo[1]);
          $seen_title = 1;

        } else if ($seen_categories != 1 and 
                   ereg("Categories: (.*)", $line, $foo)) {

          $categories = split(", *", $foo[1]);
          $seen_categories = 1;
          while(isset($categories[$bar])) {
            $categories[$bar] = trim($categories[$bar]);
            $bar++;
          }

        } else if ($seen_yield != 1 and 
                   ereg("(Servings|Yield): (.*)", $line, $foo)) {

          $yield = trim($foo[2]);
          $seen_yield = 1;

        } else if (preg_match("/^ *$/", $line) and $seen_ingr == 0) {
          # Skip this line

        } else if (preg_match($zutaten_header, $line, $foo)) {
          $j = array("title" => strtoupper($foo[2]), "ingredients" => getingr($fd));
          array_push ($zutaten, $j);
          $seen_ingr = 1;

        } else if ($seen_title == 1 and 
                   $seen_categories == 1 and 
                   $seen_yield == 1 and
                   $seen_ingr == 0 ) {
          /* lets look for the ingredients */ 
          $len = strlen($line);
          fseek($fd, -$len, SEEK_CUR);
          $j = array("title" => "Zutaten:", "ingredients" => getingr($fd));
          array_push ($zutaten, $j);
          $seen_ingr = 1;

        } else {
          /* Ok, treat the Rest as "instruction" */
          $instruction .= trim($line) . "\n";
          
        }
      }
    }
    $instructions = trim($instructions);

    return array("title" => $title,
                 "category" => $categories,
                 "yield"    => $yield,
                 "zutaten"  => $zutaten,
                 "anleitung" => $instruction);
  }


  function parse_ingredient($line) {
    /* parse each line */
    if (ereg("([ 0-9\.\/]{7}) (..) (.*)", $line, $foo)) {
      return array("quant"  => trim($foo[1]), 
                   "unit"   => trim($foo[2]), 
                   "ingred" => trim($foo[3]));
    } else return 0;
  }


  function getingr ($fd) {
    /* read the ingredients 
     * return a 2-dim Array $a[count][ingr-spec]
     * where count is a plain integer-counter, specifying more or less
     * the linenumber of the ingredient and ingr-spec is one of "quant",
     * "unit" or "ingred".
     */
    $a = array();

    while ($line = fgets($fd, 1024)) {
      $len = strlen($line);
      #if (preg_match("/^\s*$/", $line))
      #  break;
      if (($b = parse_ingredient($line)) != 0) {
        array_push ($a, $b);
      } else {
        fseek($fd, -$len, SEEK_CUR);
        break;
      }
    }
    return $a;
  }


  function format_recipe($rezept) {
    /* return a String, which contains the plain-text-formatted recipe */

    $str  = "Titel: " . $rezept["title"] . "\n".
            "Kategorien:";

    foreach ($rezept["category"] as $cat) {
      $str .= " " . $cat;
    }
    
    $str .= "\n";

    $str .= "Anzahl: " . $rezept["yield"] . "\n\n";

    /* Zutaten: */

    foreach ($rezept["zutaten"] as $z) {
      $str .= $z["title"] . "\n";
      foreach ($z["ingredients"] as $j) {
        $rline = pad_left ($j["quant"] , " ", 7) . " " .
                 pad_right($j["unit"]  , " ", 2) . " " .
                 pad_right($j["ingred"], " ", 28) . "\n";
        $str .= $rline;
      }
      $str .= "\n";
    }

    $str .= "Kochanleitung:\n\n";
    $str .= $rezept["anleitung"]; 

    return $str . "\n";
  }


  function format_recipe_html ($rezept) {
    /* return a string, which contains the html-formatted recipe */
   
    $str = "<h2>" . $rezept["title"] . "</h2>\n";
    $str .= "<table border=\"0\">\n";

    $str .= "<tr><td><b>Kategorie</b>:</td><td width=\"90%\">";
    foreach($rezept["category"] as $cat) {
      $str .= "$cat ";
    }
    $str .= "</td></tr>\n"; 

    $str .= "<tr><td><b>Portionen</b>:</td><td>" . $rezept["yield"] . "</td></tr>\n";

    $str .= "<tr><td colspan=2>\n";

    $str .= "<table border=\"0\" width=\"100%\">\n";
    foreach ($rezept["zutaten"] as $z) {
      $str .= "<tr><td colspan=3><b>" . $z["title"] . "</b></td></tr>\n";

      foreach ($z["ingredients"] as $j) {

        $quant = $j["quant"];
        $quant = round($quant,3);
        if ($quant == 0)
          $quant = '';
        $unit = nice_unit($j["unit"]);
        $str .= "<tr><td width=\"10%\" align=\"right\">" . $quant . "</td>" .
                    "<td width=\"10%\">" . $unit . "</td>" .
                    "<td>" . $j["ingred"] . "</td>" .
                "</tr>\n";
      }

    }
    $str .= "</table>\n";
    $str .= "</td></tr>\n";
  
    $str .= "<tr><td colspan=2 style=\"font-family:Helvetica\">";
    $str .= preg_replace("/(\r)?\n(\r)?\n?/", "\n<br>", $rezept["anleitung"]);
    $str .= "</td></tr>\n"; 
    $str .= "</table>\n"; 

    return $str;
  }


  function nice_unit ($unit) {
    /* Lookup a beautified name for a unit */
    $req = "select * from EINHEITEN where ABBREV = '$unit'";
    $result = mysql_db_query($GLOBALS["DB_NAME"], $req);

    $r = mysql_fetch_array($result);

    return $r["TEXT"];
  }


  function write_db ($rezept) {
    /* Write a recipe into the database. For the layout of the database
     * see Documentation/init_db.sql
     */

    global $DB_NAME;

    $req = "insert into MENUE values ( " .
          "  0, " .
          "  '" . addslashes($rezept["yield"]) . "', " .
          "  '" . addslashes($rezept["title"]) . "' " .
          "  ) ";
    $result = mysql_db_query($DB_NAME, $req);
    $mid = mysql_insert_id();

    foreach ($rezept["zutaten"] as $z) {
      $req = "insert into REZEPT values ( " .
             "  0, " .
             "  '$mid', " .
             "  '" . addslashes($z["title"]) . "' " .
             " ) ";
      $result = mysql_db_query($DB_NAME, $req);
      $rid = mysql_insert_id();

      foreach ($z["ingredients"] as $i) {
        $req = "insert into ZUTATEN values ( " .
               "  0, " .
               "  '" . addslashes($i["quant"]) . "', " .
               "  '" . addslashes($i["unit"])  . "', " .
               "  '" . addslashes($i["ingred"]) ."', " .
               "  '$rid' ".
               " ) ";
        $result = mysql_db_query($DB_NAME, $req);
      }
    }
    $req = "insert into ANWEISUNG values ( " .
           "  0, " .
           "  '" . addslashes($rezept["anleitung"]) . "', " .
           "  '$mid' " .
           " ) ";
    $result = mysql_db_query($DB_NAME, $req);

    foreach ($rezept["category"] as $cat) {
      $req = "select * from KATEGORIE where TEXT = '$cat'";
      $result = mysql_db_query($DB_NAME, $req);
      if ($r = mysql_fetch_array($result)) {
        $cid = $r["ID"];
      } else {
        $req = "insert into KATEGORIE values ( " .
               "  0, " .
               "  '" . addslashes($cat) . "' " .
               " ) ";
        $result = mysql_db_query($DB_NAME, $req);
        $cid = mysql_insert_id();
      }

      $req = "insert into KAT values ( " .
             "  0, " . 
             "  '$cid', " .
             "  '$mid'  " .
             " ) ";
      $result = mysql_db_query($DB_NAME, $req);
    }
  }


  function pad_left($str, $pad, $length) {
    /* Pad a String from the left side with $pad to a length of $length
     * or if to long: cut it from the rigth to a length of $lenght.
     */
    if (strlen($str) > $length) {
      // snip
    } else {
      while (strlen($str) < $length) {
        $str = $pad . $str;
      }
    }
    return $str;
  }


  function pad_right($str, $pad, $length) {
    /* Pad a String from the rigth side with $pad to a length of $length
     * or if to long: cut it from the rigth to a length of $lenght.
     */
    if (strlen($str) > $length) {
      // snip
    } else {
      while (strlen($str) < $length) {
        $str .= $pad;
      }
    }
    return $str;
  }


  function get_menu_by_mid ($mid) {
    /* Contruct the menu-array */

    $req = "select * from MENUE where ID = '$mid'";
    $result = mysql_db_query($GLOBALS["DB_NAME"], $req);

    $r = mysql_fetch_array($result);

    return array("title" => $r["TITEL"],
                 "yield" => $r["PORTIONEN"],
                 "category" => get_category_by_mid($mid),
                 "zutaten" => get_recipe_by_mid($mid),
                 "anleitung" => get_instructions_by_mid($mid));
  }


  function get_recipe_by_mid ($mid) {
    /* */
    $a = array();

    $req = "select * from REZEPT where MENUE_ID = '$mid' order by ID asc";
    $result = mysql_db_query($GLOBALS["DB_NAME"], $req);

    while ($r = mysql_fetch_array($result)) {
      array_push($a, array("title" => $r["TITEL"],
                                "ingredients" => get_ingr_by_rid($r["ID"])));
    }
    return $a;
  }


  function get_ingr_by_rid ($rid) {
    /* return an array with all the ingredients, belonging to an "Rezept" */
    $a = array();

    $req = "select * from ZUTATEN where REZEPT_ID = '$rid' order by ID asc";
    $result = mysql_db_query($GLOBALS["DB_NAME"], $req);

    while($r = mysql_fetch_array($result)) {
      array_push($a, array("quant" => $r["MENGE"],
                                "unit"  => $r["EINHEIT"],
                                "ingred" => $r["TEXT"]));
    }
    return $a;
  }


  function get_category_by_mid ($mid) {
    $a = array();

    $req = "select * from KAT where MENUE_ID = '$mid'";
    $result = mysql_db_query($GLOBALS["DB_NAME"], $req);

    while ($r = mysql_fetch_array($result)) {
      $req_1 = "select * from KATEGORIE where ID = " . $r["KATEGORIE_ID"];
      $res_1 = mysql_db_query($GLOBALS["DB_NAME"], $req_1);

      $f = mysql_fetch_array($res_1);

      array_push($a, $f["TEXT"]);
    }
    return $a;
  }


  function get_instructions_by_mid($mid) {
    $req = "select * from ANWEISUNG where MENUE_ID = '$mid'";
    $result = mysql_db_query($GLOBALS["DB_NAME"], $req);

    $f = mysql_fetch_array($result);

    return $f["TEXT"];
  }


  function get_mid_by_name($name) {
    /* Search the database for $name in the menu-title */
    global $DB_NAME;
    $a = array();

    $req = "select * from MENUE where TITEL like '$name' order by TITEL asc";
    $result = mysql_db_query($DB_NAME, $req);

    while ($r = @mysql_fetch_array($result)) {
      array_push($a, array("id" => $r["ID"], "title" => $r["TITEL"]));
    }

    return $a;
  }
?>
