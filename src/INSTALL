### $Id: INSTALL,v 1.15 2002/10/09 11:07:18 bus Exp $

Koch-Suite Installation Instructions
====================================

Copyright (c) 2002 Michael Lestinsky <michael@lestinsky.de>
The file `LICENSE' contains the license terms under which this package and
every single file from it may be distributed.

If you want to update from an older version of this package, see below.

The following instructions assume that all requirements (see `README') are 
fulfilled. You can find some operating system specific notes at the end of
this document.



Installation:
-------------

The following instructions assume you've got shell access to the computer
you want the Koch-Suite installed on. Please take a look at
`Documentation/FAQ.txt' if this is not the case.

 $ tar -xvzf kochsuite-*.tar.gz
   Unpack the sources, if this didn't already happen.

 $ vi config
   Adjust the configuration variables, especially the paths where to
   install this package and the database parameters.

   Set DB_TYPE according to your DBMS. Use "mysql" for MySQL, "pgsql" for
   PostgreSQL. You can find an overview of supported DBMSs in the file 
   `STATUS' in the PEAR/DB directory of your PHP installation 
   (<php-prefix>/share/php/DB).

 $ make

 $ sudo make install

   or:

   $ su root               # (To be root is required only if you set the 
                           # target directories to values you don't have 
                           # write access to.)
   $ make install

To create a DBMS-user, -password and -database:

PostgreSQL:
  To create the database and the PostgreSQL-user:

  Invoke a PostgreSQL-shell as PostgreSQL-Superuser (postgres) (or a user
  with permission to CREATE DATABASE and CREATE USER)

  $ psql [-h DBSERVER] template1

  type these commands:

  CREATE USER <USER> [PASSWORD '<PASSWORD'] NOCREATEDB NOCREATEUSER;
  CREATE DATABASE dbkoch;
  \q

MySQL:
  To create the database and the MySQL-user:

  Invoke a MySQL-shell as MySQL-Superuser (root):
  $ mysql -h DBSERVER -u root -p mysql

  type this commands:

  CREATE DATABASE DBkoch;
  GRANT ALL PRIVILEGES ON DBkoch.* TO USER@HOST IDENTIFIED BY 'PASSWORD';
  FLUSH PRIVILEGES;

For all DBMS:
Replace DBSERVER with the hostname of your database server, USER with
the name of the account you want to create , PASSWORD respectively and
HOST with the hostname where the Koch-Suite will be installed. (Please
note: in MySQL `localhost' and the FQDN of the same computer are not the
same!)
USERNAME, PASSWORD and HOST need to be the same as you typed in the file
config for DB_USER, DB_PASSWORD and DB_SERVER.

Now you need to create the tables for Koch-Suite.  While still in the
installation root directory, type

  commands/init_db


To create Koch-Suite users:

The Koch-Suite has it's own user management. This is represented by the table
`usertable' in the database. It will contain the usernames and passwords,
which are allowed to access the webfrontend (depending on your setting of
$AUTH_LEVEL in your `koch-suite.inc').

To create the users you need to login as 'admin' (the default password is
'admin', you are strongly encouraged to change this password as fast as 
possible). Use the administration interface to create the new users.
Their password is generated by random and they will receive their login
data by email.

You can use the same interface to lock an account again. For this you have
to know the username.

The accounts are created hierarchically, "Read" allows reading the recipes
only, "Write" allows both, read and write access. "Moderator" has no
function at the moment, so it is equivalent to "Write". "Administration" 
gives access to all administrative functions, such as creating or locking 
user accounts. Every level inherits the permission of his sublevels.

Please note: the crypt() function used to encrypt the passwords is
strongly operating system dependent. Especially the Windows(TM) 
implementation differs from most Un*x crypt(). This means you 
can't install the Koch-Suite on a Windows AND on Unix System and use
the _same_ database. This behavior is client independent, using a
Windows client (such as IE) and a Unix Server is completely OK!
MD5 passwords will be used if your crypt() supports MD5 hashes, 
otherwise the fallback is DES encryption. This is done transparently.

Another word on security: 

All communication between client and server are unencrypted, this 
includes passwords. If this is of concern to you, use HTTPS (HTTP with 
SSL or TLS encryption). The setup of such an environment is documented 
elsewhere. 

When a user logs in, the password is submitted exactly once over the 
network, all further authentication happens via the session cookie.


Updating:
---------

The process of development made it necessary to change the database
format slightly. Therefore the old and the new database formats aren't
compatible. If you want to preserve all stored recipes it is probably the
best to dump all the data with (the old!) `rezept'

 $ rezept -mm "" > all.mm 

Or if you have a (post) 0.5 already installed:

 $ rezept -mm -relaxed "" > all.mm

into the file `all.mm' in (relaxed) Mealmaster format.  Now delete all tables
or simply drop and create the database and recreate the tables with
`commands/init_db' from this release as described above.  Install the new
Koch-Suite release and re-import the recipes afterwards with the new `mmimport'

 $ mmimport -C < all.mm



Operating System Specific Notes:
--------------------------------

AIX 4.3:
 * you will need Gnu-make (fetch it i.e. from ftp://ftp.gnu.org/pub/gnu/make)
