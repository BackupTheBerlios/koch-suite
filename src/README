### $Id: README,v 1.31 2001/06/07 16:15:27 michael Exp $

Koch-Suite
==========

Michael Lestinsky <michael@zaphod.rhein-neckar.de>, Oktober 2000
Die Datei LICENSE enthält die Lizenz, unter der dieses Paket als ganzes
oder einzelne Dateien hieraus verwendet werden dürfen.


Was ist das hier ueberhaupt?
----------------------------

Kurz: Eine Sammlung von Skripten fuer die Rezeptverwaltung. 
Angefangen von Mealmaster-Importfiltern (http://home1.gte.net/welliver/), 
über Kommandozeilen-Tools für den Export in diverse Formate bis zu einem
Web-Interface zur Datenbank.

Das Ziel der Entwicklung ist es ein System zu schaffen, dass der
Philosophie von Unix gerecht wird. Da durch die verwendete
Programmiersprache (PHP) der Weg zum Web-Interface nicht mehr weit war,
existiert auch dieses. Dadurch ist der Zugriff auf eine einheitliche
Datenbank auch in heterogenen Netzen möglich.
Webinterface und Console-Tools bilden dabei verschiedene Aspekte einer 
Entität.


Voraussetzungen:
----------------

Wer einen Rezept-Server betreiben will, der wird einen laufenden http-
Daemon (z.B. Apache) benötigen.

Als Plattformen sind getestet:
 - Linux/i386
 - OpenBSD/i386
 - FreeBSD/i386

Auf alle Fälle ist auch PHP4 mit MySQL-Support notwendig. Diese Skripten 
sind unter PHP-4.0.4.pl1 geschrieben und getestet worden. PHP4 muss als 
Stand-Alone-Interpreter vorhanden sein, nur mit dem Apache-Modul funktio-
nieren die Konsolen-Tools nicht.
Der LaTeX-Export greift auf das Paket floatflt zurück. Bei Bedarf siehe
bitte im CTAN-Archiv nach.


Status:
-------

Inzwischen ist das Projekt in einem durchaus brauchbaren Zustand. Es gibt
funktionierende Funktionen zum Import, zum Export und für die Suche
innerhalb der Datenbank. 

Bisher existiert/funktioniert:
 - ein Tool für den Datenbank-Import im Mealmaster- oder REZKONV-Format,
 - Exportfunktionen nach Latex, Plain-Text und Mealmaster-Format, und HTML
 - ein paar Prototyp-Webseiten, die elementare Suchfunktionen in der
   Datenbank und ein Rezept-Erfassungsinterface implementieren.
 - Multilingualization. Liefere die Webseite in der Sprache aus, in der
   sie angefordert werden (Browser-Vorgabe "Accept-Language").
   Sprachmodule lassen sich sehr einfach erstellen.


PHP4-Installation:
-------------------

Um PHP4 entsprechend zu kompilieren, packt man die Quellen aus und 
ruft im PHP-Quell-Verzeichnis "configure" mit folgenden Optionen auf: 

(Stand-Alone Interpreter:)

 $ ./configure  --with-mysql=/path/to/mysql --enable-force-cgi-redirect

(Apache-Modul:)

 $ ./configure  --with-apxs=/path/to/apxs --with-mysql=/path/to/mysql

Danach baut und installiert man PHP mittels:

 $ make && make install

aus dem PHP-Quell-Verzeichnis heraus. In der Regel funktioniert dies
ohne größere Probleme.

Ausführlichere Informationen zu PHP, der Installation und eine Sprach-
referenz finden sich unter http://www.php.net


PHP4-Konfiguration:
-------------------

Ok, es ist nicht schön, dies vorauszusetzen. Mir ist es auch erst
aufgefallen, nachdem ich darüber gestolpert bin. Derzeit ist aber die
Konfiguration von PHP mit folgenden Werten erforderlich.

  [snip]
    magic_quotes_gpc      = On
    magic_quotes_runtime  = Off
    magic_quotes_sybase   = Off
    register_argc_argv    = On 
  [snap]


Installation:
-------------

Folgende Anleitung nimmt an, dass man vollen Shellzugriff auf den Rechner
hat, auf dem die Koch-Suite installiert werden soll. Siehe gegebenenfalls
in Documentation/FAQ.txt nach, wenn dies nicht ganz zutrifft.

 $ tar -xvzf kochsuite-*.tar.gz
   Dieses Paket auspacken, wenn es nicht bereits geschehen ist.

 - edit config
   Anpassen der Konfigurationsvariablen, speziell der Pfade

 $ make

 $ make install
   als Root.

Zum Import der Datenstruktur kann mit einem

 $ mysql -uUSER -pPASSWORD -hHOST DBkoch < init_db.sql 

alle notwendigen Komandos ausführen lassen (wobei USER, PASSWORD und HOST mit
den jew. Zugangsdaten zur Datenbank ersetzt werden müssen). Wie die
Datenbank selbst angelegt wird, oder ein Datenbank-Benutzer, steht im
MySQL-Manual unter http://www.mysql.com sehr gut beschrieben.


Updating:
---------

0.1.* -> 0.2 Das Format der Datenbank hat sich leicht geändert:
             Tabelle MENUE: 
               alter table MENUE change PORTIONEN PORTIONEN varchar(255);
             Diese Änderung ist vollkommen transparent zu existierenden
             Daten.
0.2.* -> 0.3, 0.3pre* -> 0.3 
             Das Format der Datenbank hat sich leicht geändert:
             Tabelle EINHEITEN, EINHEITEN_ALIAS:
             Am Einfachsten ist es, die Tabelle zu löschen und mit den
             Kommandos aus init_db.sql neu einzuspielen. Wenn man dies
             korrekt macht, dann gibt es keine Verluste *eg*
0.3 -> 0.4   Es gab keine Veränderungen an der Datenbank-Struktur.
0.4 -> 0.5   dito.


Todo/'Roadmap':
---------------

 - Dokumentation schreiben,
 - vorhandene Rezepte kommentieren,
 - Zugriffskontrolle für die Datenbank/Authentifizierung des Users
 - RezKonv-Exportfilter,
 - Multilingualization (m17n)


Bekannte Bugs:
--------------

 - Original Meal-Master hat eine Beschränkung auf 100 Zeilen pro Rezept.
   Dieses Limit wird von der Koch-Suite ignoriert. Beim Ueberschreiten
   erfolgt keine Warnung.
 - Deutsch-Englischer Mischmasch in Kommentaren,...
 - Import von Rezepten mit einer alternativen Darstellung der
   Rezept-Header ("      H    Für die Sauce"). Header werden als solche
   nicht erkannt und landen daher im Anweisungs-Text. Allerdings sind
   diese Header mittlerweile sehr selten.


Feedback:
---------

Bitte schickt mir Feedback. Am besten per EMail an meine oben angegebene
Adresse. Ich nehme gerne auch Bugreports, Patches oder Wünsche für Features 
an.

Wenn dir mein Code nicht gefällt: Ich habe nie behauptet ich hätte Talent.
;-)


Danke an:
---------

o  Leo Caspari für Feedback, Fehler-Korrekturen und Erweiterungen
o  Ulli Fetzer und Ilka Spiess für ihre Kommentare und Support beim 
   Erstellen der Meal-Master- und REZKONV-Filter.
