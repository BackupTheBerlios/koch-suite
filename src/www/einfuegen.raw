<?
  /* Copyright (c) 2002
   *      Michael Lestinsky. All rights reserved.
   *
   * Redistribution and use in source and binary forms, with or without
   * modification, are permitted provided that the following conditions
   * are met:
   * 1. Redistributions of source code must retain the above copyright
   *    notice, this list of conditions and the following disclaimer.
   * 2. Redistributions in binary form must reproduce the above copyright
   *    notice, this list of conditions and the following disclaimer in the
   *    documentation and/or other materials provided with the distribution.
   * 3. All advertising materials mentioning features or use of this software
   *    must display the following acknowledgement:
   *      This product includes software developed by Michael Lestinsky.
   *
   * THIS SOFTWARE IS PROVIDED BY MICHAEL LESTINSKY ``AS IS'' AND
   * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
   * ARE DISCLAIMED.  IN NO EVENT SHALL MICHAEL LESTINSKY BE LIABLE
   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
   * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
   * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
   * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
   * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
   * SUCH DAMAGE.
   */

  /**
   * $Id: einfuegen.raw,v 1.46 2002/10/13 18:51:26 lestinsky Exp $
   * Insert new and edit exiting recipes.
   *
   * @package WWW
   * @modulegroup Edit
   * @module einfuegen
   */

  require_once "<%%PHP_LIBS%%>/setup.inc";
  require_once "<%%PHP_LIBS%%>/functions.inc";
  require_once "<%%PHP_LIBS%%>/lang.inc";
  require_once "<%%PHP_LIBS%%>/auth.inc";

  auth(WRITE);

  $page_title = $Lang['Insert'];

  $scale = 1;
  $new_cat = true;
  $meta = array();
  $r = false;

  /*
   * read the proper values submitted via form
   */

  if (isset($_GET["mid"]))        $mid       = doubleval($_GET["mid"]);
  if (isset($_POST["titel"]))     $titel     = trim($_POST["titel"]);
  if (isset($_POST["portionen"])) $portionen = trim($_POST["portionen"]);
  if (isset($_POST["kategorie"])) $kategorie = trim($_POST["kategorie"]);
  if (isset($_POST["zutaten"]))   $zutaten   = $_POST["zutaten"];
  if (isset($_POST["anweisung"])) $anweisung = $_POST["anweisung"];
  if (isset($_POST["ztitle"]))    $ztitle    = $_POST["ztitle"];
  if (isset($_POST["more_zutaten"])) $more_zutaten = $_POST["more_zutaten"];
  if (isset($_POST["submit"]))       $submit = $_POST["submit"];
  if (isset($_POST['recorder']))  $recorder  = $_POST['recorder'];
  if (isset($_POST['date']))      $date      = $_POST['date'];
  if (isset($_POST['source']))    $source    = $_POST['source'];
  if (isset($_POST['pasted']))    $pasted    = $_POST['pasted'];
  if (isset($_SERVER["PHP_SELF"]))   $PHP_SELF = $_SERVER["PHP_SELF"];

  $target = $PHP_SELF;
  if (isset($mid) and $mid != 0) {
    $target .= "?mid=$mid";
  }

  /**
   * Generate ingredient-lines
   *
   * @param array ingredients
   * @return string
   */
  function make_zutaten ($ingr) {
    $str = '';

    foreach ($ingr as $i) {
      if ($i["quant"] != '' and $i["quant"] != 0)
        $str .= round($i["quant"], 3) . " ";
      if ($i["unit"] != '')
        $str .= $i["unit"] . " ";
      if ($i["ingred"] != '')
        $str .= $i["ingred"];
      $str .= "\n";
    }
    return $str ;
  }

  /**
   * Generate a HTML-form with content from $rezept
   *
   * @param array
   * @return string
   */
  function make_form ($rezept) {
 
    global $Lang;

    $str  = "<table border=\"0\">\n";

    // Rezept-Titel:
    $str .= "<tr>\n";
    $str .= "<td>" . $Lang['Title'] . ":</td>\n";
    $str .= "<td><input type=\"text\" class=\"textfield\" name=\"titel\" ".
                  "value=\"" .  $rezept["title"] . "\" size=\"60\"></td>\n"; 
    $str .= "</tr>\n";
 
    // Portionen:
    $str .= "<tr>\n";
    $str .= "<td>" . $Lang['Yield'] . ":</td>\n";
    $str .= "<td><input type=\"text\" class=\"textfield\" name=\"portionen\" ".
                  "value=\"" . $rezept["yield"] . "\" size=\"60\"></td>\n";
    $str .= "</tr>\n";

    // Kategorie:
    $str .= "<tr>\n";
    $str .= "<td><a href=\"kategorien.php?target=kategorie&maxsel=5\"" .
                 "target=\"kat\" onClick=\"kat();\">" . $Lang['Cat'] . "</a>:</td>\n";
    $str .= "<td><input type=\"text\" class=\"textfield\" name=\"kategorie\" ".
                   "value=\"" .
                   ( !empty($rezept["category"])
                                 ? implode(", ", $rezept["category"]) 
                                 : '' ) . 
                 "\" size=\"60\"></td>\n";
    $str .= "</tr>\n";

    // Zutaten-Liste:
    foreach($rezept["zutaten"] as $z) {
      $tmp = each($rezept["zutaten"]);
      $str .= "<tr>\n";
      if ($tmp["key"] == 0) {
        $str .= "<td>" . $Lang['Ingred'] . ":" .
                "<input type=\"hidden\" name=\"ztitle[0]\"" .
                       "value=\"" . $z["title"] . "\">" .
                "<br><a href=\"units.php\" target=\"units\" ".
                     " onClick=\"units();\" style=\"font-size:small;\">" .
                     $Lang['Units'] . "</a></td>\n";
      } else {
        $str .= "<td>&nbsp;</td>\n";
        $str .= "<td><input type=\"text\" " .
                     "name=\"ztitle[]\" " .
                     "class=\"textfield\" " .
                     "value=\"" . $z["title"] . "\" " .
                     "size=\"60\">";
        $str .= "</tr>\n";
        $str .= "<tr>\n";
        $str .= "<td>&nbsp;</td>\n";
      }
      $str .= "<td><textarea name=\"zutaten[]\" " . 
                   "cols=\"60\" rows=\"10\" wrap=\"physical\">" .
                   make_zutaten($z["ingredients"]) . "</textarea></td>\n";
      $str .= "</tr>\n";
    }
    $str .= "<!-- Bar -->\n";

    // Anweisung:
    $anleitung = htmlentities($rezept["anleitung"]);
    $anleitung = preg_replace("/\s*(&lt;|<)p(>|&gt;)\s*/", "\n\n", $anleitung);
    $anleitung = preg_replace("/\s*(&lt;|<)br(>|&gt;)\s*/", "\n", $anleitung);

    $str .= "<tr>\n";
    $str .= "<td>" . $Lang['Preparation'] . ":</td>\n";
    $str .= "<td><textarea cols=\"60\" rows=\"10\" " .
                 "name=\"anweisung\" wrap=\"virtual\">" . 
                 $anleitung . "</textarea></td>\n";
    $str .= "</tr>\n";

    // Meta-Daten:
    if (isset($rezept['meta']['Recorder'])) {
      $str .= "<tr>\n" .
                "<td>" . $Lang['Recorder'] . ":</td>\n";
      $str .= "<td><input type=\"text\" name=\"recorder\" value=\"".
                     htmlentities($rezept['meta']['Recorder']) .
                     "\" class=\"textfield\" size=\"60\"></td>\n";
      $str .= "</tr>\n"; 
    }

    if (isset($rezept['meta']['Date'])) {
      $str .= "<tr>\n" .
                "<td>" . $Lang['Date'] . ":</td>\n";
      $str .= "<td><input type=\"text\" name=\"date\" value=\"".
                     htmlentities($rezept['meta']['Date']) .
                     "\" class=\"textfield\" size=\"60\"></td>\n";
      $str .= "</tr>\n";
    }

    if (isset($rezept['meta']['Source'])) {
      $str .= "<tr>\n" .
                "<td>" . $Lang['Source'] . ":</td>\n";
      $str .= "<td><input type=\"text\" name=\"source\" value=\"".
                     htmlentities($rezept['meta']['Source']) .
                     "\" class=\"textfield\" size=\"60\"></td>\n";
      $str .= "</tr>\n";
    }

    $str .= "</table>\n";

    return $str;
  }


  /*
   * Lets go. What are we going to do? parse the submitted data, fetch
   * something from the database or create an empty entry?
   */

  if (!isset($more_zutaten) and !isset($submit)) {

    if(isset($mid) and $mid != 0) {
      /* We are editing an existing recipe, so fetch it from the database. */
      $r = get_menu_by_mid($mid, $scale);

      if (!isset($r['meta']['Recorder'])) $r['meta']['Recorder'] = '';
      if (!isset($r['meta']['Date']))     $r['meta']['Date'] = '';
      if (!isset($r['meta']['Source']))   $r['meta']['Source'] = '';

    } else if (isset($pasted)) {
      /* There is input from pastebox.php */

      require_once "<%%PHP_LIBS%%>/file.inc";
      require_once "<%%PHP_LIBS%%>/parser.inc";

      $r_file = new File;
      if ($r_file->WriteOpen()) {
        $r_file->WriteLine($pasted);
        $r_file->Close();

        $r_file->ReadOpen();
        while($line = $r_file->ReadLine()) {
          $r = false;
          if (eregi("(-{5}|M{5}).*Meal-Master.*", $line)) { 
            /* parse the recipe */
            $r =& parse_recipe($r_file, false, RECIPE_MM);
          } else if (eregi("(={10}).*REZKONV.*", $line)) {
            $r =& parse_recipe($r_file, false, RECIPE_RK);
          }
          if (!isset($r['meta']['Recorder'])) $r['meta']['Recorder'] = '';
          if (!isset($r['meta']['Date']))     $r['meta']['Date'] = '';
          if (!isset($r['meta']['Source']))   $r['meta']['Source'] = '';
        }

        $r_file->Close();
      }
    } 

    if ($r == false) {

      /* We were invoked as empty form */

      if (!isset($zutaten) or !is_array($zutaten)) {
        $zutaten[] = "";
      }

      if (!isset($ztitle) or !is_array($ztitle)) {
        $ztitle[] = "";
      }

      $zutat[] = array("title"       => $ztitle[0],
                       "ingredients" => array(array('quant'  => '', 
                                                    'unit'   => '',
                                                    'ingred' => '')
                                             )
                      );

      $meta['Recorder'] = $USER_S['realname']; 
      $meta['Date'] = strftime("%x");
      $meta['Source'] = '';

      $r = array ('title'     => '',
                  'yield'     => '',
                  'category'  => '',
                  'zutaten'   => $zutat,
                  'anleitung' => '',
                  'meta'      => $meta);
    }

  } else {
    /* Parse submitted data and generate an array of the needed structure */

    if (isset($more_zutaten)) {
      array_push($zutaten, "");
      array_push($ztitle, "");
    }

    $zutat = array();
    $y = 0;

    // Catch Configuration-settings:
    if (get_cfg_var('magic_quotes_gpc') == 1) {
      if (isset($titel))     $titel = stripslashes($titel);
      if (isset($portionen)) $portionen = stripslashes($portionen);
      if (isset($anweisung)) $anweisung = stripslashes($anweisung);
    }

    foreach ($zutaten as $z) {
      /* $zutaten ist ein Array, dass aus einzelnen Zutatenlisten
       * besteht.
       */

      $ingredients = array();

      foreach (split("[\r]?\n", trim($z)) as $line) {
        // Jede Zutatenliste wird in ihre einzelnen Zeilen aufgespalten
  
        if (get_cfg_var('magic_quotes_gpc') == 1) {
          $line = stripslashes($line);
        }

        if ($line != '') {
          $line = trim($line); // Remove whitespaces
          if (preg_match("/^((\d* ){0,1}[\d\/\.,]*) +(.*)$/", $line, $bar)) {
            // Wenn die Zeile mit einer Mengenangabe beginnt...
	    if ($bar[1] != 0) {
	      $quant = fraction_to_real($bar[1]);
	    }
	    $a = split(' +', $bar[3]);
	    if ($unit = is_unit($a[0])) {
	      array_shift($a);
            }
            $ingred = implode(" ", $a);
          } else {
            // Einheiten ohne Mengenangabe machen keinen Sinn 
            // -> alles in den Zutatentext.
            $quant  = '';
            $unit   = '';
            $ingred = trim($line);
          }
          array_push ($ingredients, array ('quant'  => $quant,
                                           'unit'   => $unit,
                                           'ingred' => $ingred));
        }

        $quant  = '';
        $unit   = '';
        $ingred = '';
      }

      array_push ($zutat, array("title"       => $ztitle[$y], 
                                "ingredients" => $ingredients));
      $y++;
    }

    // Formatiere Zeilenbrueche in das System wie wir es brauchen um.
    if (isset($anweisung)) {
      $anweisung = preg_replace('/((\r)?\n\s*){2,}/m', ' <p> ', $anweisung);
      $anweisung = preg_replace('/(\r)?\n:/m', ' <br> :', $anweisung);
      $anweisung = preg_replace('/(\r)?\n/m', ' ', $anweisung);
    }

    if (!empty($recorder)) {
      $meta['Recorder'] = trim($recorder);
    } 

    if (!empty($date)) {
      $meta['Date'] = trim($date);
    } 

    if (!empty($source)) {
      $meta['Source'] = trim($source);
    } 

    $r = array ('title'     => (isset($titel)     ? trim($titel) : '') , 
                'yield'     => (isset($portionen) ? trim($portionen) : ''),
                'category'  => (isset($kategorie) ? split(',[ ]*', $kategorie) : ''),
                'zutaten'   => $zutat,
                'anleitung' => (isset($anweisung) ? $anweisung : ''),
                'meta'      => $meta );

    $r["hash"] = recipe_hash($r);
  }

  include "<%%WEB_PREFIX%%>/header.inc";

  if (isset($submit)) {
    if(isset($mid) and $mid != 0) {
      echo "<p>" . $Lang['Recipe']['Deleted'] . "</p>\n";
      delete_menue($mid);
      echo "<p>" . $Lang['Recipe']['Inserted'] . "</p>\n";
      $mid = write_db($r, $mid, $new_cat);
    } else {
      echo "<p>" . $Lang['Recipe']['Inserted'] . "</p>\n";
      $mid = write_db($r, 0, $new_cat);
    }
  }

  include "<%%WEB_PREFIX%%>/actions.inc";
  ?>
  <script language="JavaScript1.2">
    <!--
      function kat() {
        foo = "kategorien.php?target=begriff&maxsel=1";
        window.open(foo, 'kat', 'width=500,height=500,screenX=700,screenY=300, scrollbars=yes');
      }

      function units() {
        foo = "units.php";
        window.open(foo, 'units', 'width=500,height=500,scrollbars=yes');
      }
    //-->
  </script>

  <h2><?php echo $Lang['Recipe']['Insert']; ?></h2>

  <p>
  <div class="small">[<a href="pastebox.php"><?php echo $Lang['Pastebox']['Title'] ?></a>]</div>
  </p>
  <form action="<? echo $target ?>" method="post">

  <?php
      echo make_form($r);
  ?>     

  <input type="submit" class="button" name="submit"
         value="<? echo $Lang['FormApply']; ?>">
  <input type="submit" class="button" name="more_zutaten"
         value="<? echo $Lang['FormMoreIngr']; ?>">
  <input type="reset" class="button" value="<? echo $Lang['FormReset']; ?>">
  </form>

<?php
  $authorname = "Michael Lestinsky";
  $authormail = "michael@lestinsky.de";
  include "<%%WEB_PREFIX%%>/footer.inc";
?>

