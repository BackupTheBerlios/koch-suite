#!<%%PHP%%> <%%PHP_OPTS%%>
<?
  /* Copyright (c) 2001
   *      Michael Lestinsky. All rights reserved.
   *
   * Redistribution and use in source and binary forms, with or without
   * modification, are permitted provided that the following conditions
   * are met:
   * 1. Redistributions of source code must retain the above copyright
   *    notice, this list of conditions and the following disclaimer.
   * 2. Redistributions in binary form must reproduce the above copyright
   *    notice, this list of conditions and the following disclaimer in the
   *    documentation and/or other materials provided with the distribution.
   * 3. All advertising materials mentioning features or use of this software
   *    must display the following acknowledgement:
   *      This product includes software developed by Michael Lestinsky.
   *
   * THIS SOFTWARE IS PROVIDED BY MICHAEL LESTINSKY ``AS IS'' AND
   * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
   * ARE DISCLAIMED.  IN NO EVENT SHALL MICHAEL LESTINSKY BE LIABLE
   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
   * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
   * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
   * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
   * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
   * SUCH DAMAGE.
   */

  /* $Id: rezept.raw,v 1.16 2001/09/24 21:20:23 lestinsky Exp $
   * Export a recipe in different formats.
   */

  require "<%%ETC_PREFIX%%>/koch-suite.inc";
  require "<%%PHP_LIBS%%>/functions.inc";
  require "<%%PHP_LIBS%%>/lang.inc";

  $stdout = fopen("php://stdout", "w");
  $stderr = fopen("php://stderr", "w");

  $write_latex_footer = false;
  $header_lock        = false;

  /*
   * In case register_globals is turned off in php.ini, we need to get
   * those Variables manually 
   */
  if (!isset($argc)) $argc = $HTTP_SERVER_VARS["argc"];
  if (!isset($argv)) $argv = $HTTP_SERVER_VARS["argv"];

  $kochsuite_ver = KOCHSUITE_VER;
  $helptext  = <<<EOT
rezept (Koch-Suite $kochsuite_ver)
Invoke as:
    rezept [ -mm [ -relaxed ] | -text | -latex ] [-f filename [-1]] 
           [ -t | -c | -i ] "string"

       -mm           Export as Meal-Master-recipe
           -relaxed  Violate Meal-Master-format slightly but loose less
                     meta informations.
       -text         Export as plain and humam-readable text
                     [default].
       -latex        Export as LaTeX-Source

       -f            Specify a filename for the output, otherwise
                     to STDOUT. On multiple matches append an 2-digit
                     counter to filename
           -1        Output goes into one single file, instead of one
                     file per match.

       -t            Search for "string" in the menu titles [default]
       -c            Search in category
       -i            Search in ingredient

       "search"      Search for this string

EOT;

  if ($argc == 1) {
    /* No search-string, empty command-line arguments */

    fputs ($stderr, $helptext);
    exit();
  } else {
    
    /* Default ist Text-Format */
    $format = "text";
    $where  = "title";

    /* Default is not to violate MM-Rules. */
    $strict_mm = MM_STRICT;

    for ($i=1 ; $i < count($argv) ; $i++) {
      /* parse the command-line */

      switch ($argv[$i]) {
        case '-mm':
          $format = "mm";
          break;
        case '-relaxed':
          $strict_mm = MM_VIOLATE;
          break;
        case '-text':
          $format = "text";
          break;
        case '-latex': 
          $format = "latex";
          break;
        case '-f':
          $filename = $argv[++$i];
          break;
        case '--help':
        case '-h':
          fputs ($stderr, $helptext);
          exit();
          break;
        case '-1':
          $one_file = 1;
          $break;
        case '-t':
          $where = 'title';
          break;
        case '-c':
          $where = 'cat';
          break;
        case '-i':
          $where = 'ingred';
          break;
        default:
          $search = $argv[$i];
      }
    }

    /* PHP wechselt nicht automatisch nach $PWD, also muessen wir es von
     * Hand tun. 
     */
    $dir = getenv("PWD");
    if (isset($dir) and is_dir($dir)) {
      chdir($dir);
    } else {
      fputs($stderr, "Warning: Could not chdir() to \$PWD\n" .
                     "         Your shell probably doesn't export that " .
                              "environment.\n");
      exit();
    }

    /* Suche: */
    $result = (exec_search($search, $where));

    /* Ausgabe: */

    foreach($result as $menu) {

      /* wohin schreiben? */
      if (!isset($filename)) {
        /* Schreibe nach STDOUT */
        $fp = $stdout;
        $one_file = 1;
      } else {
        if ($one_file == 1) {
          $fp = fopen($filename, "a");
        } else {
          $filename_ = "./" . $filename . "." . sprintf("%02d", $counter++);
          $fp = fopen($filename_, "w");
        }
      } 

      /* Und jetzt der Output. */
      switch ($format) {

	case "mm":
          fputs ($fp, mmexport(get_menu_by_mid($menu["id"]), $strict_mm));
	  break;

	case "text":
          fputs ($fp, format_recipe(get_menu_by_mid($menu["id"])));
          fputs ($fp, "\n-----\n");
	  break;

	case "latex":
          if ($one_file != 1) {
            fputs ($fp, latex_header());
            fputs ($fp, latex_export(get_menu_by_mid($menu["id"])));
            fputs ($fp, latex_footer());
          } else {
            if ($header_lock == false) {
              fputs($fp, latex_header());
              $header_lock = true;
            }
            fputs ($fp, latex_export(get_menu_by_mid($menu["id"])));
            fputs ($fp, "\n\n");
            $write_latex_footer = true;
          }
	  break; 

        default:
          break;
      }

      /* Schliesse File wieder, wenn es sich nicht um STDOUT handelt */
      if ($fp != $stdout) fclose($fp);

    }

    if ($write_latex_footer and $one_file == 1 and isset($filename)) {
      $fp = fopen($filename, "a");
      fputs($fp, latex_footer());
      fclose ($fp);
    } else if ($write_latex_footer and $fp == $stdout) {
      fputs($fp, latex_footer());
    }
  }

  fclose ($stdout);
  fclose ($stderr);

?>
