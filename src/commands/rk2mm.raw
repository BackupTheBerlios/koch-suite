#!<%%PHP%%> <%%PHP_OPTS%%>
<?
  /* Copyright (c) 2001
   *      Michael Lestinsky. All rights reserved.
   *
   * Redistribution and use in source and binary forms, with or without
   * modification, are permitted provided that the following conditions
   * are met:
   * 1. Redistributions of source code must retain the above copyright
   *    notice, this list of conditions and the following disclaimer.
   * 2. Redistributions in binary form must reproduce the above copyright
   *    notice, this list of conditions and the following disclaimer in the
   *    documentation and/or other materials provided with the distribution.
   * 3. All advertising materials mentioning features or use of this software
   *    must display the following acknowledgement:
   *      This product includes software developed by Michael Lestinsky.
   *
   * THIS SOFTWARE IS PROVIDED BY MICHAEL LESTINSKY ``AS IS'' AND
   * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
   * ARE DISCLAIMED.  IN NO EVENT SHALL MICHAEL LESTINSKY BE LIABLE
   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
   * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
   * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
   * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
   * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
   * SUCH DAMAGE.
   */

  /*
   * $Id: rk2mm.raw,v 1.8 2001/07/01 20:49:56 michael Exp $
   * Michael Lestinsky <michael@zaphod.rhein-neckar.de>, Okt. 2000
   * Translate REZKONV-formated recipes to Mealmaster-formated recipes.
   *
   * See the bundled file "LICENCE" for the licence of this script.
   */

  require "<%%PHP_LIBS%%>/config.inc";
  require "<%%PHP_LIBS%%>/functions.inc";

  if (!isset($argc)) $argc = $HTTP_SERVER_VARS["argc"];
  if (!isset($argv)) $argv = $HTTP_SERVER_VARS["argv"];

  /* Open filedescriptors for the STD-channels */
  $stdin  = fopen("php://stdin", "r");
  $stdout = fopen("php://stdout", "w");
  $stderr = fopen("php://stderr", "w");

  /* Create a temporary file, write $stdin to it and close the
   * temporary file. 
   * Why this way instead of using /dev/stdin directly:
   *   fseek doesn't work on /dev/stdin.
   */

  $temp = tempnam("/tmp", "mmimport");

  $temp_fd = fopen($temp, "w");

  while ($line = fgets($stdin, 1024)) {
    fputs ($temp_fd, preg_replace("/\r/", "", $line));
  }
  fclose ($temp_fd);

  /* Reopen the temporary file for reading */

  $fd = fopen($temp, "r");

  /* --- Main --- */

  while ($line = fgets($fd, 1024)) {
    if (eregi("(={10}).*REZKONV.*", $line)) {
      $rezept =& parse_recipe($fd, "RK");
    }

    if (isset($rezept)) {
      /* Parse the recipe, but don't write it to the database.
       * Main purpose: parser-testing
       */
      fputs($stdout, mmexport($rezept));
      fputs($stdout, "\n");
      unset ($rezept);
    }
  }

  /* Close open files */

  fclose($fd);
  unlink($temp);

  /* --- End --- */
?>
