<?
  /* Copyright (c) 2001
   *      Michael Lestinsky. All rights reserved.
   *
   * Redistribution and use in source and binary forms, with or without
   * modification, are permitted provided that the following conditions
   * are met:
   * 1. Redistributions of source code must retain the above copyright
   *    notice, this list of conditions and the following disclaimer.
   * 2. Redistributions in binary form must reproduce the above copyright
   *    notice, this list of conditions and the following disclaimer in the
   *    documentation and/or other materials provided with the distribution.
   * 3. All advertising materials mentioning features or use of this software
   *    must display the following acknowledgement:
   *      This product includes software developed by Michael Lestinsky.
   *
   * THIS SOFTWARE IS PROVIDED BY MICHAEL LESTINSKY ``AS IS'' AND
   * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
   * ARE DISCLAIMED.  IN NO EVENT SHALL MICHAEL LESTINSKY BE LIABLE
   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
   * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
   * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
   * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
   * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
   * SUCH DAMAGE.
   */

  /**
   * Rezepte einfuegen und bearbeiten.
   *
   * This file is subject to the license as included in the file LICENSE
   * in the top-level directory of this release.
   * (c) 2001 Michael Lestinsky <michael@zaphod.rhein-neckar.de>
   *
   * @package WWW
   * @modulegroup Edit
   * @module einfuegen
   */

  require_once "<%%PHP_LIBS%%>/config.inc";
  require_once "<%%PHP_LIBS%%>/functions.inc";
  require_once "<%%PHP_LIBS%%>/lang.inc";
  require_once "<%%PHP_LIBS%%>/nocache.inc";
  require_once "<%%PHP_LIBS%%>/auth.inc";

  auth(WRITE);

  /*
   * read the proper values submitted via form
   */

  if (isset($HTTP_GET_VARS["mid"]))        $mid       = doubleval($HTTP_GET_VARS["mid"]);
  if (isset($HTTP_POST_VARS["titel"]))     $titel     = trim($HTTP_POST_VARS["titel"]);
  if (isset($HTTP_POST_VARS["portionen"])) $portionen = trim($HTTP_POST_VARS["portionen"]);
  if (isset($HTTP_POST_VARS["kategorie"])) $kategorie = trim($HTTP_POST_VARS["kategorie"]);
  if (isset($HTTP_POST_VARS["zutaten"]))   $zutaten   = $HTTP_POST_VARS["zutaten"];
  if (isset($HTTP_POST_VARS["anweisung"])) $anweisung = $HTTP_POST_VARS["anweisung"];
  if (isset($HTTP_POST_VARS["ztitle"]))    $ztitle    = $HTTP_POST_VARS["ztitle"];
  if (isset($HTTP_POST_VARS["more_zutaten"]))
    $more_zutaten = $HTTP_POST_VARS["more_zutaten"];
  if (isset($HTTP_POST_VARS["submit"]))
    $submit = $HTTP_POST_VARS["submit"];
  if (isset($HTTP_SERVER_VARS["PHP_SELF"]))
    $PHP_SELF = $HTTP_SERVER_VARS["PHP_SELF"];

  $target = $PHP_SELF;
  if (isset($mid) and $mid != 0) {
    $target .= "?mid=$mid";
  }

  /**
   * Generate ingredient-lines
   *
   * @param array ingredients
   * @return string
   */
  function make_zutaten ($ingr) {
    $str = '';

    foreach ($ingr as $i) {
      if ($i["quant"] != '' and $i["quant"] != 0)
        $str .= round($i["quant"], 3) . " ";
      if ($i["unit"] != '')
        $str .= $i["unit"] . " ";
      if ($i["ingred"] != '')
        $str .= $i["ingred"];
      $str .= "\n";
    }
    return $str ;
  }

  /**
   * Generate a HTML-form with content from $rezept
   *
   * @param array
   * @return string
   */
  function make_form ($rezept) {
 
    global $Lang;

    $str  = "<table border=\"0\">\n";

    // Rezept-Titel:
    $str .= "<tr>\n";
    $str .= "<td>" . $Lang['Title'] . ":</td>\n";
    $str .= "<td><input type=\"text\" name=\"titel\" value=\"" .
                   $rezept["title"] . "\" size=\"60\"></td>\n"; 
    $str .= "</tr>\n";
 
    // Portionen:
    $str .= "<tr>\n";
    $str .= "<td>" . $Lang['Yield'] . ":</td>\n";
    $str .= "<td><input type=\"text\" name=\"portionen\" value=\"" .
                   $rezept["yield"] . "\" size=\"60\"></td>\n";
    $str .= "</tr>\n";

    // Kategorie:
    $str .= "<tr>\n";
    $str .= "<td><a href=\"kategorien.php?target=kategorie&maxsel=5\"" .
                 "target=\"kat\" onClick=\"kat();\">" . $Lang['Cat'] . "</a>:</td>\n";
    $str .= "<td><input type=\"text\" name=\"kategorie\" value=\"" .
                 ( !empty($rezept["category"]) ? implode(", ", $rezept["category"]) : '' ) . 
                 "\" size=\"60\"></td>\n";
    $str .= "</tr>\n";

    // Zutaten-Liste:
    foreach($rezept["zutaten"] as $z) {
      $tmp = each($rezept["zutaten"]);
      $str .= "<tr>\n";
      if ($tmp["key"] == 0) {
        $str .= "<td>" . $Lang['Ingred'] . ":" .
                "<input type=\"hidden\" name=\"ztitle[0]\"" .
                       "value=\"" . $z["title"] . "\">" .
                "<br><a href=\"units.php\" target=\"units\" ".
                     " onClick=\"units();\" style=\"font-size:small;\">" .
                     $Lang['Units'] . "</a></td>\n";
      } else {
        $str .= "<td>&nbsp;</td>\n";
        $str .= "<td><input type=\"text\" " .
                     "name=\"ztitle[]\" " .
                     "value=\"" . $z["title"] . "\" " .
                     "size=\"60\">";
        $str .= "</tr>\n";
        $str .= "<tr>\n";
        $str .= "<td>&nbsp;</td>\n";
      }
      $str .= "<td><textarea name=\"zutaten[]\" " . 
                   "cols=\"60\" rows=\"10\" wrap=\"physical\">" .
                   make_zutaten($z["ingredients"]) . "</textarea></td>\n";
      $str .= "</tr>\n";
    }
    $str .= "<!-- Bar -->\n";

    // Anweisung:
    $anleitung = htmlentities($rezept["anleitung"]);
    $anleitung = preg_replace("/\s*(&lt;|<)p(>|&gt;)\s*/", "\n\n", $anleitung);
    $anleitung = preg_replace("/\s*(&lt;|<)br(>|&gt;)\s*/", "\n", $anleitung);

    $str .= "<tr>\n";
    $str .= "<td>" . $Lang['Preparation'] . ":</td>\n";
    $str .= "<td><textarea cols=\"60\" rows=\"10\" " .
                 "name=\"anweisung\" wrap=\"virtual\">" . 
                 $anleitung . "</textarea></td>\n";
    $str .= "</tr>\n";

    $str .= "</table>\n";

    return $str;
  }

  // Parse den Input, bzw. Wenn der Input leer ist, erzeuge trotzdem ein
  // passendes, leeres Array:

  if (!isset($zutaten) or !is_array($zutaten)) {
    $zutaten[] = "";
  }

  if (!isset($ztitle) or !is_array($ztitle)) {
    $ztitle[] = "";
  }

  if (isset($more_zutaten)) {
    array_push($zutaten, "");
    array_push($ztitle, "");
  }

  $zutat = array();
  $y = 0;

  // Catch Configuration-settings:
  if (get_cfg_var('magic_quotes_gpc') == 1) {
    if (isset($titel))     $titel = stripslashes($titel);
    if (isset($portionen)) $portionen = stripslashes($portionen);
    if (isset($anweisung)) $anweisung = stripslashes($anweisung);
  }

  foreach ($zutaten as $z) {
    /* $zutaten ist ein Array, dass aus einzelnen Zutatenlisten
     * besteht.
     */

    $ingredients = array();

    foreach (split("[\r]?\n", trim($z)) as $line) {
      // Jede Zutatenliste wird in ihre einzelnen Zeilen aufgespalten

      if (get_cfg_var('magic_quotes_gpc') == 1) {
        $line = stripslashes($line);
      }
      if ($line != '') {
        if (preg_match("/^((\d* ){0,1}[\d\/\.,]*) (.*)$/", $line, $bar)) {
          // Wenn die Zeile mit einer Mengenangabe beginnt...
	  if ($bar[1] != 0) {
	    $quant = fraction_to_real($bar[1]);
	  }
	  $a = explode(" ", $bar[3], 2);
	  if ($unit = is_unit($a[0])) {
	    array_shift($a);
          }
          $ingred = implode(" ", $a);
        } else {
          // Einheiten ohne Mengenangabe machen keinen Sinn 
          // -> alles in den Zutatentext.
          $quant  = "";
          $unit   = "";
          $ingred = trim($line);
        }
        array_push ($ingredients, array ("quant"  => $quant,
                                         "unit"   => $unit,
                                         "ingred" => $ingred));
      }

      $quant  = '';
      $unit   = '';
      $ingred = '';
    }

    // if ($ztitle[$y] != '' and count($ingredients) != 0) {
      array_push ($zutat, array("title"       => $ztitle[$y], 
                                "ingredients" => $ingredients));
    // }
    $y++;
  }

  // Formatiere Zeilenbrueche in das System wie wir es brauchen um.
  if (isset($anweisung)) {
    $anweisung = preg_replace("/((\r)?\n\s*){2,}/m", " <p> ", $anweisung);
    $anweisung = preg_replace("/(\r)?\n:/m", " <br> :", $anweisung);
    $anweisung = preg_replace("/(\r)?\n/m", " ", $anweisung);
  }

  $r = array ("title"     => (isset($titel)     ? trim($titel) : '') , 
              "yield"     => (isset($portionen) ? trim($portionen) : ''),
              "category"  => (isset($kategorie) ? split(',[ ]*', $kategorie) : ''),
              "zutaten"   => $zutat,
              "anleitung" => (isset($anweisung) ? $anweisung : '') );

  $r["hash"] = recipe_hash($r);

  if (isset($submit)) {
    if(isset($mid) and $mid != 0) {
      echo "<p>" . $Lang['Recipe']['Deleted'] . "</p>\n";
      delete_menue($mid);
    }
    echo "<p>" . $Lang['Recipe']['Inserted'] . "</p>\n";
    write_db($r);
  } elseif (isset($more_zutaten)) {
    // Do nothing.
  } else {
    if (isset($mid) and $mid != 0) {
      $r = get_menu_by_mid($mid);
    }
  }
?>

<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN"
    "http://www.w3.org/TR/REC-html40/loose.dtd">
<html>

<head>
  <link rel="stylesheet" type="text/css" href="styles.css">
  <link rev="made" href="mailto:michael@zaphod.rhein-neckar.de">
  <title><?php echo $Lang['Recipe']['Insert']; ?></title>
  <meta http-equiv="Content-Script-Type" content="text/javascript">
  <meta http-equiv="Content-Style-Type" content="text/css">
  <meta http-equiv="Pragma" content="no-cache">
  <meta http-equiv="Expires" content="-1">
  <!-- $Id: einfuegen.raw,v 1.28 2001/09/03 21:02:58 lestinsky Exp $ -->

  <script language="JavaScript1.2">
  <!--
    function kat() {
      foo = "kategorien.php?target=kategorie&maxsel=5";
      window.open(foo, 'kat', 'width=300,height=400,scrollbars=yes');
    }

    function units() {
      foo = "units.php";
      window.open(foo, 'units', 'width=500,height=500,scrollbars=yes');
    }
  //-->
  </script>

</head>

<body>
<a name="top"></a>
<h1><img src="pics/title.gif" alt="Koch-Suite"></h1>

<table border=0 cellpadding="3" cellspacing="1">
<tr>
  <td valign="top">
    <? include "./menue.inc"; ?>
  </td>
  <td>
    <!-- Rechts: Ausgabe -->
  <?
  ?>
    <h2><?php echo $Lang['Recipe']['Insert']; ?></h2>

    <form action="<? echo $target ?>" method="post">

  <?
      echo make_form($r);
  ?>     

    <input type="submit" name="submit" value="<? echo $Lang['FormApply']; ?>">
    <input type="submit" name="more_zutaten" value="<? echo $Lang['FormMoreIngr']; ?>">
    <input type="reset" value="<? echo $Lang['FormReset']; ?>">
    </form>

  </td>
</tr>
</table>

<hr noshade>
&copy; 2001 Michael Lestinsky 
&lt;<a href="mailto:michael@zaphod.rhein-neckar.de">michael@zaphod.rhein-neckar.de</a>&gt;.

</body>
</html>

<?db_disconnect();?>
