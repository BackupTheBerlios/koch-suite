#!/bin/sh
# $Id: configure,v 1.27 2005/01/02 02:43:29 lestinsky Exp $
#
# Copyright (c) 2005
#      Michael Lestinsky. All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions
# are met:
# 1. Redistributions of source code must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
# 2. Redistributions in binary form must reproduce the above copyright
#    notice, this list of conditions and the following disclaimer in the
#    documentation and/or other materials provided with the distribution.
# 3. All advertising materials mentioning features or use of this software
#    must display the following acknowledgement:
#      This product includes software developed by Michael Lestinsky.
#
# THIS SOFTWARE IS PROVIDED BY MICHAEL LESTINSKY ``AS IS'' AND
# ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
# ARE DISCLAIMED.  IN NO EVENT SHALL MICHAEL LESTINSKY BE LIABLE
# FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
# DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
# OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
# HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
# LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
# OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
# SUCH DAMAGE.
#
# Parse the config-File and create a sed-Script from it.

CONF_RAW=config
CONF_RAW_MY=config.my
CONF_FILE=config.sed
AWKSCRIPT=genconfig.awk

# config.my overrides config
if [ -f ${CONF_RAW_MY} ] ; then 
  CONF_RAW=${CONF_RAW_MY}
fi

THISDIR=`pwd`

my_which () {
	OIFS=$IFS
	IFS=":$IFS"
	result=""
	for i in $PATH
	do
		[ -x "$i/$1" ] && result="$i/$1" && break
	done
	IFS=$OIFS
	echo $result
	[ $result ] && return 0
	return 1
}

add_conf () {
    # Add a line to ${CONF_FILE}
    # $1 = Name, $2 = Value
    echo "s:<%%$1%%>:$2:g" >> ${CONF_FILE}
}

check_prereq () {
    # Check if we can find all necessary tools:
    echo -n "Checking for '$1' ... "
    req=`my_which "$1"`
    if [ -n "${req}" -a $? = 0 ] ; then 
        # Found.
        echo "Found - $req"
        add_conf $1 ${req}
    else
        echo "Not Found!"
        exit 2
    fi
}

check_opt () {
    # Check for optional tools and add their path to the config.sed
    echo -n "Probing for optional '$1': ... "
    req=`my_which "$1"`
    if [ -n "${req}" -a $? = 0 ] ; then
        # Found.
        echo "Found - $req"
        add_conf $1 ${req}
    else 
        echo "Not Found!"
        add_conf $1 "none"
    fi
}

make_makefiles () {
    # Generate Makefiles in Directory $1
    ( 
        echo -n "Generating Makefile in ./$1 ... ";
        cd "$1";
        translate_raw Makefile
        echo "Done."
    )
}

translate_raw () {
    # Translate Raw files
    sed -f ${THISDIR}/${CONF_FILE} $1.raw > $1
}


##########
# Lets start with an empty ${CONF_FILE}
rm -f ${CONF_FILE}


##########
# Build-Depends: 'awk' and 'sed'
echo -n "Checking for an usable awk ... "
for i in mawk nawk gawk awk; do
    awk=`my_which "$i"`
    if [ -n "${awk}" -a $? = 0 ] ; then
        if [ $i = "awk" ] ; then
            warn_awk=1
        fi
        break;
    fi
done
if [ -z "${awk}" ] ; then
    echo "Not Found"
    exit 1
else
    echo "Found - ${awk}"
    if [ "${warn_awk}" = "1" ] ; then
        echo "*** Warning: using an untested awk. This may yield errors."
    fi
fi

check_prereq sed
check_prereq mkdir
check_prereq chmod
check_prereq chown

##########
# Probe for a good install or use the one we provide as fallback
echo -n "Checking for a BSD compatible install ... "
for i in ginstall installbsd install ; do
    install=`my_which "$i"`
    if [ -n "${install}" -a $? = 0 ] ; then
        # Got one. Is it sufficient enough?

        # Is this install capable to create directories?
        ${install} -d /tmp/KS_TESTDIR 2>&1 > /dev/null

        if [ $? != 0 ] ; then
            # No
            stupid_install=1
            break;
        else
            break;
        fi
    else
        unset install
    fi
done
if [ -n "${install}" -a "${stupid_install}" != "1" ] ; then
    echo "Found - ${install}"
    add_conf "INSTALL" ${install}
else
    # We could not find a good "install" or it was to stupid.
    add_conf "INSTALL" "${THISDIR}/install-sh"
    echo "Using ./install-sh"
fi


##########
# Generate the sed-file:
echo -n "Generating config.sed ... "
${awk} -f ${AWKSCRIPT} ${CONF_RAW} >> ${CONF_FILE}
if [ $? = 0 ] ; then 
    echo "Done."
else 
    echo "Failed."
    exit $?
fi

##########
# Optional tools:
TOOLS="pdflatex latex dvips gs"
for foo in ${TOOLS} ; do
    check_opt ${foo}
done

##########
# Create the Makefiles:
SUBDIRS="include www www/pics commands man man/man1"
for foo in ${SUBDIRS}
do
    make_makefiles "${foo}"
done

exit 0
