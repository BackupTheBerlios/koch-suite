<?
  /*
   * $Id: lang.raw,v 1.16 2002/06/11 18:39:59 lestinsky Exp $
   * Guess prefered language for the web-interface.
   *
   * Copyright (c) 2002
   *      Michael Lestinsky. All rights reserved.
   *
   * Redistribution and use in source and binary forms, with or without
   * modification, are permitted provided that the following conditions
   * are met:
   * 1. Redistributions of source code must retain the above copyright
   *    notice, this list of conditions and the following disclaimer.
   * 2. Redistributions in binary form must reproduce the above copyright
   *    notice, this list of conditions and the following disclaimer in the
   *    documentation and/or other materials provided with the distribution.
   * 3. All advertising materials mentioning features or use of this software
   *    must display the following acknowledgement:
   *      This product includes software developed by Michael Lestinsky.
   *
   * THIS SOFTWARE IS PROVIDED BY MICHAEL LESTINSKY ``AS IS'' AND
   * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
   * ARE DISCLAIMED.  IN NO EVENT SHALL MICHAEL LESTINSKY BE LIABLE
   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
   * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
   * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
   * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANYWAY
   * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
   * SUCH DAMAGE.
   */


  function read_best_language($lang) {
    /* Try to get the best match for the selected language. */

    /* strip of trailing encoding, since we don't care about that for   
     * the moment. I.e.: de_DE.ISO-8859-1 -> de_DE
     */

    $L = preg_replace("/(.*)(\.(.*))/" , "\\1", $lang);

    if (!read_lang_file($L)) {

      /* If this doesn't exist:
       * cut away the "_DE"-part and try again
       */
      $L = strtr($L, "-", "_");
      $L = preg_replace("/(([a-zA-Z]{2})(_[a-zA-Z]{2}))/", "\\2", $L);

      if (!read_lang_file($L)) {
        /* Sorry, no such language */
        write_log("Sorry, no such language: $L");
        return false;
      } else {
        return true;
      }

    } else {
      return true;
    }
  }


  function read_lang_file($lang) {
    /* read the language-file for the specified language 
     * return false on error.
     */
    global $Lang;
    $lang_file = "<%%PHP_LIBS%%>/$lang.inc";
 
    if (file_exists($lang_file) and is_readable($lang_file)) {
      require($lang_file);
      write_log("Matched language: $lang ($lang_file)");
      $GLOBALS["KS_LANG"] = $lang;
      return true;
    } else {
      return false;
    }
  }


  /*
   * Start:
   */


  /* Read the default language-file (default: de) */
  read_lang_file($DEFAULT_LANG);

  if ($tmp = getenv("HTTP_ACCEPT_LANGUAGE")) {
    $accept_langs = explode(",", $tmp);
    reset($accept_langs);
    while(list($key,$lang)=each($accept_langs)) {
      if (eregi("([-a-z]+) *; *qs=([0-9.]*)", $lang, $regs)) {
        $accepted_langs[$regs[1]]=$regs[2];
      } else if (eregi("([-a-z]+)", $lang, $regs)) {
        $accepted_langs[$regs[1]]="1.0";
      }
    }
    arsort($accepted_langs,SORT_NUMERIC);
  }
  if (!isset($accept_langs) or count($accept_langs) == 0) {
    /* Seems we are running from the commandline. 
     * therefore read environment-variables.
     */

    if ($L = getenv("KS_LANG")) {
      /* KS_LANG environment prefered */
      read_best_language($L);
    } else if ($L = getenv("LC_MESSAGES")) {
      /* LC_MESSAGES environment */
      read_best_language($L);
    } else if ($L = getenv("LANG")) {
      /* LANG environment as fallback */
      read_best_language($L);
    } 

  } else {
    /* We were started from a webpage and therefore
     * respect rather HTTP_ACCEPT_LANGUAGE 
     * which contains the value of the Accept-Language HTTP-Header 
     */

    $i = 0;
    while (isset($accept_langs[$i]) and $lang = $accept_langs[$i]) {
      $l = trim(preg_replace("/(.*)?(;(.*))/" , "\\1", $lang));

      /* we don't need to read it twice: */
      if ($l == $DEFAULT_LANG) {
        break;
      } else if (read_best_language($l)) {
        break;
      }
      $i++;
    }
  }

  /* User is overriding the settings from the webinterface */
  if ($KS_ENV == "web") {
    session_register('lang_override');
    if (isset($_GET['lang_override']))
      $_SESSION['lang_override'] = $_GET['lang_override'];

    if (!empty($_SESSION['lang_override'])) 
      read_lang_file($_SESSION['lang_override']);
  }

  setlocale(LC_ALL, $Lang['Locale']);

?>
